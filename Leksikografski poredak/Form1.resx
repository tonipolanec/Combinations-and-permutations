<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="textBoxUnosSlova.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wzAMwzBm+B9z8sLjYIzMjwAAAABJRU5ErkJggg==
</value>
  </data>
</root>